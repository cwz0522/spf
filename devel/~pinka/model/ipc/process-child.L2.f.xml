<?xml version="1.0" encoding="ASCII"?>
<forth xmlns="http://forth.org.ru/ForthML/">

<slot>
  own-handles
  child-in
  child-out
  consumer-out
</slot>

<def name="open-filename"  ds=" d-txt-filename mode -- h ">
  OVER <unless> >R 2DROP `NUL R> </unless>
  CREATE-FILE-SHARED THROW HERITABLE-HANDLE
</def>

<def name="close-file"  ds=" h|0 -- ">
  DUP <if> CLOSE-FILE THROW <exit/></if> DROP
</def>

<def name="assume-filenames"  ds=" d-txt-in d-txt-out d-txt-err -- ">
  <rem> if filename is 0 length, "NUL" assumed </rem>
  TRUE own-handles!
  W/O open-filename     startup-info hStdError  T!
  W/O open-filename     startup-info hStdOutput T!
  W/O open-filename     startup-info hStdInput  T!
  STARTF_USESTDHANDLES startup-flags+!
</def>

<def name="use-pipes-simple"  ds=" -- ">
  TRUE own-handles!
  <rem> h-read h-write </rem>
  CREATE-PIPE-ANON THROW >R HERITABLE-HANDLE        <rem> in  </rem>
  CREATE-PIPE-ANON THROW SWAP >R HERITABLE-HANDLE   <rem> out </rem>
  0. W/O open-filename                              <rem> err </rem>
  handles!
  R> child-out!
  R> child-in!
</def>

<def name="clear-handles-own" ds=" -- ">
  own-handles <if>
    child-out close-file 0 child-out!
    child-in  close-file 0 child-in!
    FALSE own-handles!
  </if>
</def>

<handler event="cleanup" advice="before">
  clear-handles-own
  0 consumer-out!
</handler>

<def name="clear" ds=" -- "><rem> redefinition </rem>
  clear-handles-own
  clear
</def>

<def name="perform-per" ds=" a-in u-in a-shell u-shell consumer-xt -- ">
  consumer-out! commandline! use-pipes-simple create-process
    handles close-file close-file close-file <rem> (!!!) </rem>
  DUP <if> clear-handles-own THROW </if> DROP
  <rem>( d-data )</rem>
  child-in WRITE-FILE THROW
  child-in CLOSE-FILE THROW 0 child-in!

  4050 ALLOCATED OVER >R <q ds=" a-buf u-buf -- ">
    <repeat> 2DUP child-out READOUT-FILE THROW DUP <while/> consumer-out EXECUTE </repeat>
    2DROP 2DROP
  </q> CATCH
  R> FREE SWAP THROW THROW
</def>


</forth>
