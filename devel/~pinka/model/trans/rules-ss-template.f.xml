<?xml version="1.0" encoding="ASCII" ?>
<f:forth
xmlns:f="http://forth.org.ru/ForthML/"
  xmlns="http://forth.org.ru/ForthML/Rules/"
xmlns:r="http://forth.org.ru/ForthML/Rules/"
>
<!-- May.2008 -->

<f:also wordlist="forthml-hidden">

<transform name="rules-ss-template">
  <rule match="f:rem"/><!-- skip comments -->
  <rule match="#comment"/>
  <rule match="f:g"><yield/></rule>
  <rule match="f:text">
    FirstChildValue T-SLIT <m> R> XENCLOSED >R </m>
  </rule>
  <rule match="#text">
    NodeValue 
    <f:choose> 2DUP FINE-HEAD NIP <f:when>
      T-SLIT <m> R> XENCLOSED >R </m>
    </f:when><f:otherwise><!-- skip whitespace-node -->
      2DROP 
    </f:otherwise></f:choose>
  </rule>
  <rule match="f:ss">
    <yield transform="rules-default"/>
    <f:rem> TODO: we should accurately restore the previous 'transform' here </f:rem>
    <m> R> XENCLOSED >R </m>
  </rule>
</transform>
<f:comment>
  TODO: There is a leak if exception occurs on a template instantiation.
</f:comment>


<rule match="f:for-string" ds=" i*x xt k*x -- j*x ">
  M-ENSURE-POSTPONING
  <m>
    0 >R
      <yield transform="rules-ss-template"/>
    R@ XCOUNT ROT CATCH R> XRELEASE THROW
  </m>
  <f:rem> see also: ../dbms/rules-xquery.f.xml </f:rem>
</rule>

<rule match="f:with-string" ds=" i*x xt -- j*x ">
  M-ENSURE-POSTPONING
  <m>
    >R 0 >R
      <yield transform="rules-ss-template"/>
    2R@ XCOUNT ROT CATCH R> XRELEASE THROW RDROP
  </m>
</rule>



<rule match="f:template" ds=" i*x -- a u ">
  M @ <f:if> `#f:template-M-not-supported STHROW </f:if>
  <mm>
    ALIGN HERE 0 , <get-name/> <!-- ( addr  a u ) -->
    <def name="{}" xmlns="http://forth.org.ru/ForthML/">
      0. <lit> DUP </lit> DUP @ SWAP 0! XUPDATED >R
      <r:yield transform="rules-ss-template"/>
      R> DUP <lit/> ! XCOUNT
    </def>
  </mm>
</rule>



<g xmlns="http://forth.org.ru/ForthML/">

<def name="m-prop-setter" ds=" addr -- xt "><rem> stack spec is given at M0 </rem>
  <r:m>
    <p>
      0. <lit> DUP </lit> DUP @ SWAP 0! XUPDATED >R
      <r:yield transform="rules-ss-template"/>
      R> <lit/> !
    </p>
  </r:m>
</def>

<def name="create-prop" ds=" d-txt-name --  addr ">
  ALIGN HERE 0 , >R
  2DUP
    <def name="join-{}" ds=" d-txt -- "><lit> R@ </lit> @ XENCLOSED <lit> R@ </lit> ! </def>
    <def name="{}"      ds=" -- d-txt "><lit> R@ </lit> @ XCOUNT </def>
  R>
</def>

<def name="create-prop-setter" ds=" d-txt-name xt --  ">
  >R 2DUP  
    <alias name="{}!"   > R@ </alias>
    <alias name="set-{}"> R@ </alias>
    RDROP
</def>

</g>

<rule match="f:prop" ds=" i*x -- a u ">
  M @ <f:if> `#f:prop-M-not-supported STHROW </f:if>
  <m>
    <get-name/> 2DUP create-prop
    <m0> m-prop-setter </m0> create-prop-setter
  </m>
</rule>

</f:also>

</f:forth>
