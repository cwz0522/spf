<?xml version="1.0" encoding="ASCII"?>
<forth xmlns="http://forth.org.ru/ForthML/">

<text>
  charset database user pass  hostname port host

</text><each-word> create-slot2 </each-word>
<text>
  nport conn errno res

</text><each-word> create-slot </each-word>

<def name="get-err" ds=" -- ior ">
  conn mysql_errno DUP errno! <unless> 0 <exit/></unless>
  conn mysql_error ASCIIZ> LAST-ERROR-MSG! -2
</def>

<def name="set-conn-options" ds=" -- ">
  charset DUP <unless> 2DROP `utf8 </unless>
  DROP  MYSQL_SET_CHARSET_NAME  conn  mysql_options <unless> get-err THROW </unless>
</def>

<def name="(connect)" ds=" -- ior ">
  conn <unless> mysql_new_conn conn! set-conn-options </unless>
  CLIENT_MULTI_STATEMENTS
  0 <rem> unix_socket </rem>
  nport
  database  DROP
  pass      DROP
  user      DROP
  hostname  DROP
  conn
  mysql_real_connect <if> 0 <exit/></if>
  get-err
</def>

<def name="connect" ds=" -- ">
  (connect) THROW
</def>

<def name="close" ds=" -- ">
  conn <unless><exit/></unless>
  conn mysql_close DROP 0 conn!
</def>

<def name="free-res" ds=" -- ">
  res mysql_free_res  0 res!
</def>

<def name="store-res" ds=" -- ">
  res <if> res mysql_free_res </if> conn mysql_store_result res!
</def>

<def name="query" ds=" a u -- ">
  conn <unless> `#mysql-no-conn STHROW </unless>
  free-res
  SWAP conn mysql_real_query <unless> get-err THROW </unless>
  <until>
    conn mysql_store_result ?DUP <if> free-res res! </if>
    conn mysql_next_result <rem> 0 -- Successful and there are more results </rem>
  </until>
</def>

<def name="get-first-value" ds=" -- a u | 0 0 ">
  res <unless> 0. <exit/></unless>
  0 <rem> column </rem>
  res mysql_fetch_row DUP <unless><exit/></unless>
  res mysql_get_value
</def>
 

<wordlist name="buf">
  <include href="http://forth.org.ru/~pinka/model/io/stream-mem.L1.f.xml"/>
</wordlist>

<def name="(store-value)" ds=" addr u -- ">
  buf::write <!-- need to escape: & < > -->
</def>

<def name="(store-field)" ds=" u-col row -- ">
  <text>&lt;</text> buf::write
  OVER res mysql_field_name 2DUP 2>R buf::write
       res mysql_get_value
  OVER <unless> 2DROP <text> xsi:nil="true"/&gt;</text> buf::write RDROP RDROP <exit/></unless>
  <text>&gt;</text> buf::write (store-value)
  <text>&lt;/</text> buf::write 2R> buf::write <text>&gt;</text> buf::write
</def>

<def name="(store-resultX)" ds=" -- ">
  res <unless><exit/></unless>
  <repeat>
    res mysql_fetch_row  DUP <while/>
    <text>&#xA;<![CDATA[<row>]]></text> buf::write
    0 res mysql_num_fields <times ds=" row 0 -- row u-col ">
      2DUP SWAP (store-field)
      1+
    </times> 2DROP
    <text><![CDATA[</row>]]></text> buf::write
  </repeat> DROP
</def>

<def name="store-resultX" ds=" -- ">
  buf::clear
<text><![CDATA[<?xml version="1.0"?>
<resultset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">]]></text>
  buf::write
  (store-resultX)
  <text>&#xA;<![CDATA[</resultset>]]></text>
  buf::write
</def>

<def name="with-resultX-chunks" ds=" xt -- ">
  >R <repeat> buf::next-chunk DUP <while/> R@ EXECUTE </repeat> RDROP 2DROP
</def>


</forth>
