<?xml version="1.0" encoding="ASCII"?>
<forth xmlns="http://forth.org.ru/ForthML/">

<wordlist name="counters">

<cell name="_cnt"/>
<cell name="_cnt-idle"/>

<export>

<def name="inc-workers" ds=" -- "> _cnt InterlockedIncrement DROP </def>
<def name="dec-workers" ds=" -- "> _cnt InterlockedDecrement DROP </def>

<def name="workers-quantity" ds=" -- n ">  _cnt @ </def>


<def name="inc-idle" ds=" -- "> _cnt-idle InterlockedIncrement DROP </def>
<def name="dec-idle" ds=" -- "> _cnt-idle InterlockedDecrement DROP </def>

<def name="workers-idle" ds=" -- n "> _cnt-idle @ </def>

</export>
</wordlist>


<def name="load-worker" ds=" -- ">
  <include href="worker.f.xml"/> inc-workers
</def>




<wordlist name="tcp-server" xml:base="http://forth.org.ru/~pinka/model/">

<include href="data/events-common.f.xml"/>

<include href="data/queue.L1.f.xml"/>

<def name="get-client?" ds=" -- x true | false ">
  inc-idle
  dequeueN ?DUP 0NEQ  <rem> returns false when sock is 0 </rem>
  dec-idle
</def>

<cell name="_workers"/>

<def name="remember-worker" ds=" wid -- ">
  0 , HERE _workers BIND-NODE ,
</def>

<def name="instantiate-worker" ds=" -- "><!-- up to 20 K on worker, as yet -->
  <wid>
    <const name="my-wid">GET-CURRENT</const>
    <def name="get-client?"> get-client? </def><rem> local alias </rem>
    load-worker
  </wid> DUP <logN>worker wid</logN>
  DUP remember-worker `start OBEY-SURE-
</def>

<def name="stop-workers" ds=" -- ">
  2 <times>
    workers-quantity <times> 0 enqueueN </times>
    <repeat> workers-idle <while/> queue-length <while/> 20 PAUSE </repeat>
    queue-length <if> 50 PAUSE </if>
  </times>
</def>

<def name="dispatch-client" ds=" sock -- ">
  DUP <logN>dispatch client</logN>
  enqueueN
  <!-- <exit/> -->
  queue-length  workers-idle UGT <unless><exit/></unless>
  workers-quantity 20 UGT <if><exit/></if>
  instantiate-worker
</def>


<include href="qms/tcp4-server.L1.f.xml" />
<include href="qms/tcp-server.L2.f.xml" />

<cell name="_storage"/>

<handler event="startup">
  <log>tcp server started</log>
  450 1024 * NEW-STORAGE
  <!-- DUP <logN>native storage</logN> -->
  DUP _storage !  MOUNT
  instantiate-worker
</handler>

<handler event="shutdown" advice="before">
  stop-workers
  DISMOUNT DROP
  _storage @ DEL-STORAGE _storage 0!
</handler>

<handler event="shutdown">
  <log>tcp server stoped</log>
</handler>

<def name="restart" ds=" -- ">
  stop
  50 PAUSE
  start
</def>

</wordlist>


</forth>
