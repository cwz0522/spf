\ Feb.2008 

Макет форт-системы с целью отработки композии и сборки.

  Все слова форт-процессора работают напрямую как есть из инструментальной системы.
  

  
О целевой системе

  Список слов наследует от простого списка
    --> над списками слов доступны операции, определенные для простых списков.

  Базовое представление строки наследует от представления блока данных ( addr u )
    --> над строками доступны операции блоков данных.

  Контекст поиска (scope) является стеком и определен через стек.


  
О целевом трансляторе
  
  В словаре TC-WL располагаются слова, собранные по правилам инструментальной системы,
но работающие по правилам целевой системы.
Формат самого словаря TC-WL, имен в нем, формат отложенного кода этих слов -- все присуще инструментальной системе. Но, поведение этих слов присуще целевой системе: -- например, слова из лексикона кодогенератора порождают код в формате целевой системы, слова для именования и создания словарей порождают объекты в формате целевой системы.
  Собираются словарь TC-WL непосредственно из исходников целевой системы. Причем, собирается на абстрактном уровне, из именованных моделей, реализация которых произвольна и даже имена файлов не фиксированны. См. tc-host.f.xml
  Список слов: TC-WL NLIST (в контексте инструментальной системы).

  
  
  
Фичи

  1. Как здорово мы тут управляемся со множеством относительных и абсолютных путей. Тому способствуют:
    а. xml:base -- относительное значение href считается от базы у ближайшего предка;
    б. uri-map -- отображение частей абсолютных URI на локальные каталоги;
    в. кроме того, даже далекие файлы непосредственно доступны по http.
    
  2. Используемый механизм xml-struct (на базе элементов xi:model и xi:include) является чистым в смысле функциональной парадигмы, так же, как и XSLT. В частности, это позволяет легко комбинировать именованные модели многократно -- предыдущая комбинация никак не влияет не последующую. Этот эффект задействован при сборке пары: "целевой транслятор", "целевая система".
  
    