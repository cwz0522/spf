\ . 20-06-2005 постскрипт-подобная работа со стеком для СПФ

Unit: psLikeMarkers

	20 CONSTANT #markers
	   USER     M0	  \ дно стека
	   USER     MP	  \ указатель

\ инициализируем стек маркеров
F: init  [ #markers CELLS ] LITERAL DUP
	ALLOCATE THROW DUP M0 ! + MP ! ;F

\ определяет сколько всего маркеров на стеке маркеров хранится
: Marks   ( --> n ) M0 @ MP @ - CELL / #markers + ;

\ прочитать значение последнего маркера
: m-@	  ( --> n ) Marks IF MP @ @ ELSE -1 THROW THEN ;

\ извлечь последний маркер со стека маркеров на стек данных
: m-pop   ( --> n ) Marks IF m-@ MP cell+! ELSE -1 THROW THEN ;

\ сохранить значение со стека данных на стек маркеров
: m-push  ( n --> )
	  Marks #markers -
	  IF MP DUP cell-! @ !
	    ELSE -1 THROW
	  THEN ;
EndUnit

psLikeMarkers

: ClearToMark ( --> ) m-pop SP! ;
: DropMark    ( --> ) m-pop DROP ;
: AddMark     ( --> ) SP@ m-push ;
: CountToMark ( --> n ) m-@ SP@ - CELL / ;
: ClearMarks  ( --> ) M0 @ #markers CELLS + MP ! ;

init

\EOF
     иногда хочется использовать стек данных, как массив. Слова для
произвольного доступа к стеку данных имеются(ROLL, PICK), а вот для
управления большим количеством данных таких слов нет :(

  AddMark     - фиксирует глубину стека данных на данный момент времени
  DropMark    - удаляет последний маркер
  ClearToMark - удаляет верхние элементы со стека данных до значения
		сохраненного по AddMark
  CountToMark - определяет глубину стека данных от последнего сохраненного
		маркера.
  ClearMarks  - очистить стек маркеров.

В постскрипте маркеры хранятся на общем стеке данных. Возможно это
более удобный вариант, но мне кажется, что в форте лучше для маркеров
отвести отдельный стек. Соответственно, если будет возникать ситуация,
когда стек обнуляется, то придется удалять все маркеры, чтобы работа
с ними оставалась корректной.

Возможно со временем придет более удачная идея.


