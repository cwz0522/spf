\ 2006-12-09 ~mOleg

addr.f     - работа с адресными ссылками.
alias.f    - создание имен, ассоциируемых с уже существующим кодом
ansi-esc.f - работа с ANSI ESCAPE последовательност€ми.
avds.f     - порождающее слово, возвращающее адрес своего кода
bytes.f    - работа с байтами.
compile.f  - реализаци€ слова COMPILE дл€ —ѕ‘.
control.f  - позвол€ет использовать управл€ющие структуры во врем€ интерпретации.
does.f     - высокоуровневый вариант DOES>.
doloop.f   - вариат переносимой реализации циклов DO LOOP
double.f   - работа с числами двойной длины.
endian.f   - определение размерности стандартного числа, типа машины
for-next.f - циклы FOR .. NEXT FOR .. TILL
ifcolon.f  - компил€ци€ только уникальных слов.
ifdef.f    - выполнение действий, определ€емых наличием слов в контексте.
ifnot.f    - дополнительные операции ветвлени€, которых не хватает —ѕ‘у.
iw.f       - ф-ции с инициализацией.
marks.f    - постскрипт-подобное управление стеком данных.
on-error.f - вложенные обработчики ошибок.
parser.f   - дополнительные слова дл€ работы парсера —ѕ‘.
queue.f    - неименованные очереди.
shades.f   - работа с теневыми регистрами.
spells.f   - обработка параметров командной строки.
stack.f    - неименованые стеки.
stackadd.f - доп слова дл€ работы со стеками данных и возвратов.
tricks.f   - маленькие полезные трюки с числами.
useful.f   - просто набор часто используемых слов.
rstack.f   - манипул€ции данными на стеке возвратов.
run.f      - поддержка неименованных временных слов времени исполнени€.
words.f    - отображение списка слов в словар€х (более удобный вариант).

