( Трансляция исходных текстов программ.
  ОС-независимые определения.
  Copyright [C] 1992-1999 A.Cherezov ac@forth.org
  Преобразование из 16-разрядного в 32-разрядный код - 1995-96гг
  Ревизия - сентябрь 1999
)

USER S0   \ адрес дна стека данных
USER R0   \ адрес дна стека возвратов
USER WARNING
USER STATE ( -- a-addr ) \ 94
     \ a-addr - адрес ячейки, содержащей флажок "состояние компиляции".
     \ STATE "истина" в режиме компиляции, иначе "ложь".
     \ Изменяют STATE только следующие стандартные слова:
     \ : ; [ ] ABORT QUIT :NONAME
USER BLK
USER CURFILE

VECT OK
VECT <MAIN>
VECT ?LITERAL
VECT ?SLITERAL

: DEPTH ( -- +n ) \ 94
\ +n - число одинарных ячеек, находящихся на стеке данных перед
\ тем как туда было помещено +n.
  SP@ S0 @ - NEGATE 4 U/
;
: ?STACK ( -> ) \ выдать ошибку "исчерпание стека", если он более чем пуст
  SP@ S0 @ SWAP U< IF S0 @ SP! -4 THROW THEN
;
: ?COMP ( -> )
  STATE @ 0= IF -312 THROW THEN ( Только для режима компиляции )
;

: WORD ( char "<chars>ccc<char>" -- c-addr ) \ 94
\ Пропустить ведущие разделители. Выбрать символы, ограниченные
\ разделителем char.
\ Исключительная ситуация возникает, если длина извлеченной строки
\ больше максимальной длины строки со счетчиком.
\ c-addr - адрес переменной области, содержащей извлеченное слово
\ в виде строки со счетчиком.
\ Если разбираемая область пуста или содержит только разделители,
\ результирующая строка имеет нулевую длину.
\ В конец строки помещается пробел, не включаемый в длину строки.
\ Программа может изменять символы в строке.
  DUP SKIP PARSE
  DUP HERE C! HERE 1+ SWAP CMOVE
  BL HERE COUNT + !
  HERE
;

: ' ( "<spaces>name" -- xt ) \ 94
\ Пропустить ведущие пробелы. Выделить name, ограниченное пробелом. Найти name 
\ и вернуть xt, выполнимый токен для name. Неопределенная ситуация возникает, 
\ если name не найдено.
\ Во время интерпретации  ' name EXECUTE  равносильно  name.
  NextWord SFIND 0= IF -321 THROW THEN (  -? )
;

: CHAR ( "<spaces>name" -- char ) \ 94
\ Пропустить ведущие разделители. Выделить имя, органиченное пробелами.
\ Положить код его первого символа на стек.
  NextWord DROP C@
;

: NOTFOUND ( a u -- )   ?SLITERAL ;

: INTERPRET ( -> ) \ интерпретировать входной поток
  BEGIN
    NextWord DUP
  WHILE
    SFIND ?DUP
    IF
         STATE @ =
         IF COMPILE, ELSE EXECUTE THEN
    ELSE
         S" NOTFOUND" SFIND 
         IF EXECUTE 
         ELSE 2DROP ?SLITERAL THEN
    THEN
    ?STACK
  REPEAT 2DROP
;

: BYE ( -- ) \ 94 TOOLS EXT
\ Вернуть управление операционной системе, если она есть.
  0 HALT
;

: OK1
  STATE @ 0=
  IF ."  Ok" DEPTH 0 MAX 70 MIN 
     0 ?DO [CHAR] . EMIT LOOP CR 
  THEN
;

: [   \ 94 CORE
\ Интерпретация: семантика неопределена.
\ Компиляция: Выполнить семантику выполнения, данную ниже.
\ Выполнение: ( -- )
\ Установить состояние интерпретации. [ слово немедленного выполнения.
  STATE 0!
; IMMEDIATE

: ] ( -- ) \ 94 CORE
\ Установить состояние компиляции.
  TRUE STATE !
;

: MAIN1 ( -- )
  BEGIN
    REFILL
  WHILE
    INTERPRET OK
  REPEAT BYE
;

: QUIT ( -- ) ( R: i*x ) \ CORE 94
\ Сбросить стек возвратов, записать ноль в SOURCE-ID.
\ Установить стандартный входной поток и состояние интерпретации.
\ Не выводить сообщений. Повторять следующее:
\ - Принять строку из входного потока во входной буфер, обнулить >IN
\   и интепретировать.
\ - Вывести зависящее от реализации системное приглашение, если
\   система находится в состоянии интерпретации, все процессы завершены,
\   и нет неоднозначных ситуаций.

  BEGIN
    CONSOLE-HANDLES
    0 TO SOURCE-ID
    [COMPILE] [
    ['] MAIN1 CATCH
    ['] ERROR  CATCH DROP
 ( S0 @ SP! R0 @ RP! \ стеки не сбрасываем, т.к. это за нас делает CATCH :)
  AGAIN
;

: EVALUATE-WITH ( ( i*x c-addr u xt -- j*x )
\ Считая c-addr u входным потоком, вычислить её интерпретатором xt.
  SOURCE-ID >R TIB >R #TIB @ >R >IN @ >R
  -1 TO SOURCE-ID
  SWAP #TIB ! SWAP TO TIB >IN 0!
  ( ['] INTERPRET) CATCH
  R> >IN ! R> #TIB ! R> TO TIB R> TO SOURCE-ID
  THROW
;
: EVALUATE ( i*x c-addr u -- j*x ) \ 94
\ Сохраняет текущие спецификации входного потока.
\ Записывает -1 в SOURCE-ID. Делает строку, заданную c-addr u,
\ входным потоком и входным буфером, устанавливает >IN в 0
\ и интерпретирует. Когда строка разобрана до конца - восстанавливает
\ спецификации предыдущего входного потока.
\ Другие изменения стека определяются выполняемыми по EVALUATE словами.
  ['] INTERPRET EVALUATE-WITH
;

: INCLUDE-FILE ( i*x fileid -- j*x ) \ 94 FILE
\ Убрать fileid со стека. Сохранить текущие спецификации входного потока,
\ включая текущее значение SOURCE-ID. Записать fileid в SOURCE-ID.
\ Сделать файл, заданный fileid, входным потоком. Записать 0 в BLK.
\ Другие изменения стека определяются словами из включенного файла.
\ Повторять до конца файла: прочесть строку из файла, заполнить входной
\ буфер содержимым этой строки, установить >IN в ноль и интерпретировать.
\ Интерпретация текста начинается с позиции, с которой должно происходить
\ дальнейшее чтение файла.
\ Когда достигнут конец файла, закрыть файл и восстановить спецификации
\ входного потока к их сохраненным значениям.
\ Неопределенная ситуация возникает, если fileid неверен, если возникают
\ исключительные ситуации ввода-вывода по мере чтения fileid, или
\ возникают исключительная ситуация при закрытии файла. Когда имеет
\ место неопределенная ситуация, статус (открыт или закрыт) любых
\ интерпретируемых файлов зависит от реализации.
  TIB >R >IN @ >R #TIB @ >R SOURCE-ID >R BLK @ >R CURSTR @ >R
  C/L 2 + ALLOCATE THROW TO TIB  BLK 0!
  TO SOURCE-ID
  CURSTR 0!
  BEGIN
    REFILL
  WHILE
    INTERPRET
  REPEAT
  TIB FREE THROW
  SOURCE-ID CLOSE-FILE THROW ( ошибка закрытия файла )
  R> CURSTR ! R> BLK ! R> TO SOURCE-ID R> #TIB ! R> >IN ! R> TO TIB
;

: INCLUDE-PROBE ( addr u -- ... 0 | ior )
  R/O OPEN-FILE-SHARED ?DUP IF NIP EXIT THEN
  INCLUDE-FILE 0
;

\ : INCLUDED ( i*x c-addr u -- j*x ) \ 94 FILE
\ Убрать c-addr u со стека. Сохранить текущие спецификации входного потока,
\ включая текущее значение SOURCE-ID. Открыть файл, заданный c-addr u,
\ записать полученный fileid в SOURCE-ID и сделать его входным потоком.
\ Записать 0 в BLK.
\ Другие изменения стека определяются словами из включенного файла.
\ Повторять до конца файла: прочесть строку из файла, заполнить входной
\ буфер содержимым этой строки, установить >IN в ноль и интерпретировать.
\ Интерпретация текста начинается с позиции, с которой должно происходить
\ дальнейшее чтение файла.
\ Когда достигнут конец файла, закрыть файл и восстановить спецификации
\ входного потока к их сохраненным значениям.
\ Неопределенная ситуация возникает, если fileid неверен, если возникают
\ исключительные ситуации ввода-вывода по мере чтения fileid, или
\ возникают исключительная ситуация при закрытии файла. Когда имеет
\ место неопределенная ситуация, статус (открыт или закрыт) любых
\ интерпретируемых файлов зависит от реализации.

\  CURFILE @ >R
\  DUP CELL+ ALLOCATE THROW CURFILE !
\  2DUP CURFILE @ SWAP 1+ MOVE

\  R/O OPEN-FILE-SHARED ?DUP 
\  IF NIP CURFILE @ FREE DROP R> CURFILE ! THROW THEN ( ошибка открытия файла )
\  DUP >R
\  ['] INCLUDE-FILE CATCH
\  ?DUP IF R> CLOSE-FILE DROP THROW
\          \ закрыли транслируемый файл и передаем ошибку выше
\       ELSE R> DROP THEN

\  CURFILE @ FREE THROW R> CURFILE !
\ ;

: HEAP-COPY ( addr u -- addr1 )
\ скопировать строку в хип и вернуть её адрес в хипе
  0 MAX
  DUP 1+ ALLOCATE THROW DUP >R
  SWAP DUP >R MOVE
  0 R> R@ + C! R>
;

: INCLUDED ( i*x c-addr u -- j*x ) \ 94 FILE
\ Убрать c-addr u со стека. Сохранить текущие спецификации входного потока,
\ включая текущее значение SOURCE-ID. Открыть файл, заданный c-addr u,
\ записать полученный fileid в SOURCE-ID и сделать его входным потоком.
\ Записать 0 в BLK.
\ Другие изменения стека определяются словами из включенного файла.
\ Повторять до конца файла: прочесть строку из файла, заполнить входной
\ буфер содержимым этой строки, установить >IN в ноль и интерпретировать.
\ Интерпретация текста начинается с позиции, с которой должно происходить
\ дальнейшее чтение файла.
\ Когда достигнут конец файла, закрыть файл и восстановить спецификации
\ входного потока к их сохраненным значениям.
\ Неопределенная ситуация возникает, если fileid неверен, если возникают
\ исключительные ситуации ввода-вывода по мере чтения fileid, или
\ возникают исключительная ситуация при закрытии файла. Когда имеет
\ место неопределенная ситуация, статус (открыт или закрыт) любых
\ интерпретируемых файлов зависит от реализации.
  CURFILE @ >R
  2DUP HEAP-COPY CURFILE !

  2DUP 2>R INCLUDE-PROBE 2R> ROT
  IF +ModuleDirName INCLUDE-PROBE ELSE 2DROP 0 THEN
  CURFILE @ ?DUP IF FREE DROP THEN \ ~ruv 24.07.2001
  R> CURFILE !
  THROW
;
: REQUIRED ( waddr wu laddr lu -- )
  2SWAP SFIND
  IF DROP 2DROP EXIT
  ELSE 2DROP INCLUDED THEN
;
: REQUIRE ( "word" "libpath" -- )
  BL SKIP BL PARSE
  BL SKIP BL PARSE 2DUP + 0 SWAP C!
  REQUIRED
;
